---
- name: 'yum | update'
  yum: name=* state=present
  sudo: yes
  
- name: 'install build essential'
  yum: pkg={{ item }} state=present
  with_items:
    - git-core 
    - zlib 
    - zlib-devel 
    - gcc-c++ 
    - patch 
    - readline 
    - readline-devel 
    - libyaml-devel 
    - libffi-devel 
    - openssl-devel 
    - make 
    - bzip2 
    - autoconf 
    - automake 
    - libtool 
    - bison 
    - curl 
    - sqlite-devel
  sudo: yes

# - name: 'install libssl'
#   yum: name=libssl-dev state=present
#   sudo: yes

# - name: 'install libreadline'
#   yum: name=libreadline-dev state=present
#   sudo: yes

# - name: 'install git'
#   yum: name=git state=present
#   sudo: yes

# - name: 'install zlib1g'
#   yum: name=zlib1g-dev state=present
#   sudo: yes

- name: 'rbenv | clone repo'
  git: 'repo=https://github.com/rbenv/rbenv.git dest={{ rbenv_root }} accept_hostkey=yes'
  sudo: yes

- name: 'rbenv | check ruby-build installed'
  command: 'test -x {{ rbenv_root }}/plugins/ruby-build'
  # Мы проверяем, установлен ли ruby-build и регистрируем событие plugin_installed,
  # а затем выполняем все остальные шаги, которые не были изменены при следующем прогоне плейбука
  register: 'plugin_installed'
  ignore_errors: yes
  sudo: yes

- name: 'rbenv | add bin to path'
  shell: echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> {{ home }}/.bashrc
  when: 'plugin_installed|failed'
  sudo: yes

- name: 'rbenv | init'
  shell: echo 'eval "$(rbenv init -)"' >> {{ home }}/.bashrc
  when: 'plugin_installed|failed'
  sudo: yes

- name: 'ruby | add bin to path'
  shell: echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> {{ home }}/.bashrc
  when: 'plugin_installed|failed'
  sudo: yes

- name: 'rbenv | clone ruby-build repo'
  git: 'repo=https://github.com/sstephenson/ruby-build.git dest={{ rbenv_root }}/plugins/ruby-build accept_hostkey=yes'
  when: 'plugin_installed|failed'
  sudo: yes

- name: 'rbenv | check ruby {{ ruby_version }} installed'
  shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv versions | grep {{ ruby_version }}'
  register: 'ruby_installed'
  ignore_errors: yes
  sudo: yes

- name: 'rbenv | install ruby {{ ruby_version }}'
  shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv install {{ ruby_version }}'
  when: 'ruby_installed|failed'
  sudo: yes

- name: 'rbenv | set global ruby {{ ruby_version }}'
  shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv global {{ ruby_version }}'
  when: 'ruby_installed|failed'
  sudo: yes

- name: 'rbenv | rehash'
  shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv rehash'
  when: 'ruby_installed|failed'
  sudo: yes

- name: 'rbenv | create .gemrc'
  lineinfile: 'dest={{ home }}/.gemrc owner={{ user }} group={{ user }} mode=0644 line="gem: --no-ri --no-rdoc" create=yes'
  when: 'ruby_installed|failed'
  sudo: yes

- name: 'ruby | install bundler'
  shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv exec gem install bundler -v 1.13.6'
  # gem: name=bundler state=present
  when: 'ruby_installed|failed'
  sudo: yes

- name: 'ruby | install rails'
  # gem: name=rails state=present version=4.2.7.1
  shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv exec gem install rails -v 4.2.7.1'
  when: 'ruby_installed|failed'
  sudo: yes


- name: 'rbenv | change owner'
  shell: 'chown -R {{ user }}:{{ user }} {{ rbenv_root }}'
  # when: 'ruby_installed|failed'
  sudo: yes


